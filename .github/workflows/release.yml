name: Create Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get current version
        id: get-version
        run: |
          # 현재 태그를 가져옵니다. 예: v1.2.3
          CURRENT_TAG=$(git describe --tags --abbrev=0)
          echo "Current tag: $CURRENT_TAG"
          # 버전 숫자 분리 (예: 1, 2, 3)
          VERSION_PARTS=(${CURRENT_TAG//./ })
          MAJOR=${VERSION_PARTS[0]#v}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          
          # 태그에 따라 버전 증가
          if [[ $GITHUB_REF =~ "major" ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ $GITHUB_REF =~ "minor" ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ $GITHUB_REF =~ "patch" ]]; then
            PATCH=$((PATCH + 1))
          fi

          # 새로운 태그 설정 (예: v1.3.0)
          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Generate Changelog with PRs
        id: changelog
        run: |
          echo "Generating changelog with PRs..."
          COMMITS=$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%H")
          CHANGELOG=""
          for COMMIT in $COMMITS; do
            PR=$(gh pr list --search "$COMMIT" --json number,title --jq '.[] | "- PR #\(.number): \(.title)"')
            CHANGELOG="$CHANGELOG\n$PR"
          done
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: ${{ env.NEW_TAG }}
          body: |
            ## Changes
            ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push new tag
        run: |
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}
